{"ast":null,"code":"var _jsxFileName = \"/home/cala/project/bridgeweb/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { parseUnits } from \"ethers\";\nimport { JsonRpcProvider, Contract } from \"ethers\";\nimport { WalletKitProvider, useWalletKit } from \"@mysten/wallet-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [ethereumAccount, setEthereumAccount] = useState(\"\");\n  const [suiAccount, setSuiAccount] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const connectEthereumWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setEthereumAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"MetaMask connection failed: \", error);\n      }\n    } else {\n      alert(\"MetaMask is not installed!\");\n    }\n  };\n  const connectSuiWallet = async () => {\n    _s();\n    try {\n      const {\n        currentWallet\n      } = useWalletKit();\n      const suiWallet = await (currentWallet === null || currentWallet === void 0 ? void 0 : currentWallet.connect());\n      setSuiAccount(suiWallet === null || suiWallet === void 0 ? void 0 : suiWallet.address);\n    } catch (error) {\n      console.error(\"Sui Wallet connection failed: \", error);\n    }\n  };\n  _s(connectSuiWallet, \"6cKPBMMMqs2GeqjwOEK5+gAHav4=\", false, function () {\n    return [useWalletKit];\n  });\n  const bridgeToSui = async () => {\n    if (!ethereumAccount || !suiAccount || !amount) {\n      alert(\"Please connect both wallets and specify an amount.\");\n      return;\n    }\n    try {\n      const provider = new JsonRpcProvider(\"http://127.0.0.1:8545\");\n      const signer = provider.getSigner(ethereumAccount);\n      const ethContractAddress = \"0xYourEthereumContractAddress\"; // Replace with your Ethereum contract address\n      const ethAbi = [\"function burn(uint256 amount) public\"];\n      const ethContract = new Contract(ethContractAddress, ethAbi, signer);\n      await ethContract.burn(parseUnits(amount, 18));\n      const suiTransaction = {\n        packageObjectId: \"0xYourSuiPackageId\",\n        // Replace with your Sui package ID\n        module: \"suipart\",\n        function: \"mint\",\n        arguments: [suiAccount, parseInt(amount, 10)]\n      };\n      // Ensure you use the correct method from the Sui SDK to sign and execute transactions\n      console.log(\"Sui transaction\", suiTransaction);\n      alert(\"Tokens bridged successfully!\");\n    } catch (error) {\n      console.error(\"Error bridging tokens: \", error);\n      alert(\"Failed to bridge tokens.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Blockchain Bridge \\uD83C\\uDF09\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectEthereumWallet,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded shadow\",\n        children: \"Connect Ethereum Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), ethereumAccount && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Ethereum: \", ethereumAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectSuiWallet,\n        className: \"px-4 py-2 bg-green-500 text-white rounded shadow\",\n        children: \"Connect Sui Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), suiAccount && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Sui: \", suiAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount to Bridge\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        className: \"p-2 border rounded w-64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bridgeToSui,\n      className: \"px-4 py-2 bg-purple-500 text-white rounded shadow\",\n      children: \"Bridge Tokens to Sui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"cRwxDPn886kvWv+Cw2WuwhjLID4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","parseUnits","JsonRpcProvider","Contract","WalletKitProvider","useWalletKit","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","ethereumAccount","setEthereumAccount","suiAccount","setSuiAccount","amount","setAmount","connectEthereumWallet","window","ethereum","accounts","request","method","error","console","alert","connectSuiWallet","currentWallet","suiWallet","connect","address","bridgeToSui","provider","signer","getSigner","ethContractAddress","ethAbi","ethContract","burn","suiTransaction","packageObjectId","module","function","arguments","parseInt","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/cala/project/bridgeweb/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { parseUnits } from \"ethers\";\nimport { JsonRpcProvider, Contract } from \"ethers\";\nimport { WalletKitProvider, useWalletKit } from \"@mysten/wallet-kit\";\n\nconst App = () => {\n  const [ethereumAccount, setEthereumAccount] = useState(\"\");\n  const [suiAccount, setSuiAccount] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const connectEthereumWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        setEthereumAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"MetaMask connection failed: \", error);\n      }\n    } else {\n      alert(\"MetaMask is not installed!\");\n    }\n  };\n\n  const connectSuiWallet = async () => {\n    try {\n      const { currentWallet } = useWalletKit();\n      const suiWallet = await currentWallet?.connect();\n      setSuiAccount(suiWallet?.address);\n    } catch (error) {\n      console.error(\"Sui Wallet connection failed: \", error);\n    }\n  };\n\n  const bridgeToSui = async () => {\n    if (!ethereumAccount || !suiAccount || !amount) {\n      alert(\"Please connect both wallets and specify an amount.\");\n      return;\n    }\n\n    try {\n      const provider = new JsonRpcProvider(\"http://127.0.0.1:8545\");\n      const signer = provider.getSigner(ethereumAccount);\n\n      const ethContractAddress = \"0xYourEthereumContractAddress\"; // Replace with your Ethereum contract address\n      const ethAbi = [\"function burn(uint256 amount) public\"];\n      const ethContract = new Contract(ethContractAddress, ethAbi, signer);\n\n      await ethContract.burn(parseUnits(amount, 18));\n\n      const suiTransaction = {\n        packageObjectId: \"0xYourSuiPackageId\", // Replace with your Sui package ID\n        module: \"suipart\",\n        function: \"mint\",\n        arguments: [suiAccount, parseInt(amount, 10)],\n      };\n      // Ensure you use the correct method from the Sui SDK to sign and execute transactions\n      console.log(\"Sui transaction\", suiTransaction);\n\n      alert(\"Tokens bridged successfully!\");\n    } catch (error) {\n      console.error(\"Error bridging tokens: \", error);\n      alert(\"Failed to bridge tokens.\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Blockchain Bridge ðŸŒ‰</h1>\n\n      <div className=\"mb-4\">\n        <button\n          onClick={connectEthereumWallet}\n          className=\"px-4 py-2 bg-blue-500 text-white rounded shadow\"\n        >\n          Connect Ethereum Wallet\n        </button>\n        {ethereumAccount && <p>Connected Ethereum: {ethereumAccount}</p>}\n      </div>\n\n      <div className=\"mb-4\">\n        <button\n          onClick={connectSuiWallet}\n          className=\"px-4 py-2 bg-green-500 text-white rounded shadow\"\n        >\n          Connect Sui Wallet\n        </button>\n        {suiAccount && <p>Connected Sui: {suiAccount}</p>}\n      </div>\n\n      <div className=\"mb-4\">\n        <input\n          type=\"number\"\n          placeholder=\"Amount to Bridge\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          className=\"p-2 border rounded w-64\"\n        />\n      </div>\n\n      <button\n        onClick={bridgeToSui}\n        className=\"px-4 py-2 bg-purple-500 text-white rounded shadow\"\n      >\n        Bridge Tokens to Sui\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}