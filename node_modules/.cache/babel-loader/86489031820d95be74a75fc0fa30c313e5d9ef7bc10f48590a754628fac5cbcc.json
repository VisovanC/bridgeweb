{"ast":null,"code":"var _jsxFileName = \"/home/cala/project/bridgeweb/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { WalletKitProvider, useWallet } from \"@mysten/wallet-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [ethereumAccount, setEthereumAccount] = useState(\"\");\n  const [suiAccount, setSuiAccount] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const {\n    connect,\n    wallets,\n    connected,\n    disconnect\n  } = useWallet();\n\n  // Connect to Ethereum Wallet (MetaMask)\n  const connectEthereumWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setEthereumAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"MetaMask connection failed: \", error);\n      }\n    } else {\n      alert(\"MetaMask is not installed!\");\n    }\n  };\n\n  // Connect to Sui Wallet\n  const connectSuiWallet = async () => {\n    try {\n      if (!connected) {\n        await connect();\n        const suiWallet = wallets[0];\n        if (suiWallet) {\n          setSuiAccount(suiWallet.address);\n        }\n      } else {\n        alert(\"Sui Wallet is already connected!\");\n      }\n    } catch (error) {\n      console.error(\"Sui Wallet connection failed: \", error);\n    }\n  };\n  const handleDisconnectSui = async () => {\n    await disconnect();\n    setSuiAccount(\"\");\n  };\n\n  // Bridge tokens from Ethereum to Sui\n  const bridgeToSui = async () => {\n    if (!ethereumAccount || !suiAccount || !amount) {\n      alert(\"Please connect both wallets and specify an amount.\");\n      return;\n    }\n    try {\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n      const signer = provider.getSigner(ethereumAccount);\n\n      // Call burn function on Ethereum contract\n      const ethContractAddress = \"0xYourEthereumContractAddress\"; // Replace with your Ethereum contract address\n      const ethAbi = [\"function burn(uint256 amount) public\"];\n      const ethContract = new ethers.Contract(ethContractAddress, ethAbi, signer);\n      await ethContract.burn(ethers.utils.parseUnits(amount, 18));\n\n      // Call mint function on Sui contract\n      const suiTransaction = {\n        packageObjectId: \"0xYourSuiPackageId\",\n        // Replace with your Sui package ID\n        module: \"suipart\",\n        function: \"mint\",\n        arguments: [suiAccount, parseInt(amount, 10)]\n      };\n      console.log(\"Mint Sui Transaction:\", suiTransaction); // Debugging log\n      alert(\"Tokens bridged successfully!\");\n    } catch (error) {\n      console.error(\"Error bridging tokens: \", error);\n      alert(\"Failed to bridge tokens.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Blockchain Bridge \\uD83C\\uDF09\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectEthereumWallet,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded shadow\",\n        children: \"Connect Ethereum Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), ethereumAccount && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Ethereum: \", ethereumAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectSuiWallet,\n        className: \"px-4 py-2 bg-green-500 text-white rounded shadow\",\n        children: \"Connect Sui Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), suiAccount && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected Sui: \", suiAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), connected && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDisconnectSui,\n      className: \"px-4 py-2 bg-red-500 text-white rounded shadow\",\n      children: \"Disconnect Sui Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount to Bridge\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        className: \"p-2 border rounded w-64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bridgeToSui,\n      className: \"px-4 py-2 bg-purple-500 text-white rounded shadow\",\n      children: \"Bridge Tokens to Sui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jrL5bvA7OxdfTPvzv0u/ElpR2rU=\", false, function () {\n  return [useWallet];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","WalletKitProvider","useWallet","jsxDEV","_jsxDEV","App","_s","ethereumAccount","setEthereumAccount","suiAccount","setSuiAccount","amount","setAmount","connect","wallets","connected","disconnect","connectEthereumWallet","window","ethereum","accounts","request","method","error","console","alert","connectSuiWallet","suiWallet","address","handleDisconnectSui","bridgeToSui","provider","providers","JsonRpcProvider","signer","getSigner","ethContractAddress","ethAbi","ethContract","Contract","burn","utils","parseUnits","suiTransaction","packageObjectId","module","function","arguments","parseInt","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/cala/project/bridgeweb/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { WalletKitProvider, useWallet } from \"@mysten/wallet-kit\";\n\nconst App = () => {\n  const [ethereumAccount, setEthereumAccount] = useState(\"\");\n  const [suiAccount, setSuiAccount] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const { connect, wallets, connected, disconnect } = useWallet();\n\n  // Connect to Ethereum Wallet (MetaMask)\n  const connectEthereumWallet = async () => {\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setEthereumAccount(accounts[0]);\n      } catch (error) {\n        console.error(\"MetaMask connection failed: \", error);\n      }\n    } else {\n      alert(\"MetaMask is not installed!\");\n    }\n  };\n\n  // Connect to Sui Wallet\n  const connectSuiWallet = async () => {\n    try {\n      if (!connected) {\n        await connect();\n        const suiWallet = wallets[0];\n        if (suiWallet) {\n          setSuiAccount(suiWallet.address);\n        }\n      } else {\n        alert(\"Sui Wallet is already connected!\");\n      }\n    } catch (error) {\n      console.error(\"Sui Wallet connection failed: \", error);\n    }\n  };\n\n  const handleDisconnectSui = async () => {\n    await disconnect();\n    setSuiAccount(\"\");\n  };\n\n  // Bridge tokens from Ethereum to Sui\n  const bridgeToSui = async () => {\n    if (!ethereumAccount || !suiAccount || !amount) {\n      alert(\"Please connect both wallets and specify an amount.\");\n      return;\n    }\n\n    try {\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n      const signer = provider.getSigner(ethereumAccount);\n\n      // Call burn function on Ethereum contract\n      const ethContractAddress = \"0xYourEthereumContractAddress\"; // Replace with your Ethereum contract address\n      const ethAbi = [\"function burn(uint256 amount) public\"];\n      const ethContract = new ethers.Contract(ethContractAddress, ethAbi, signer);\n      await ethContract.burn(ethers.utils.parseUnits(amount, 18));\n\n      // Call mint function on Sui contract\n      const suiTransaction = {\n        packageObjectId: \"0xYourSuiPackageId\", // Replace with your Sui package ID\n        module: \"suipart\",\n        function: \"mint\",\n        arguments: [suiAccount, parseInt(amount, 10)],\n      };\n      console.log(\"Mint Sui Transaction:\", suiTransaction); // Debugging log\n      alert(\"Tokens bridged successfully!\");\n    } catch (error) {\n      console.error(\"Error bridging tokens: \", error);\n      alert(\"Failed to bridge tokens.\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">Blockchain Bridge 🌉</h1>\n\n      <div className=\"mb-4\">\n        <button onClick={connectEthereumWallet} className=\"px-4 py-2 bg-blue-500 text-white rounded shadow\">\n          Connect Ethereum Wallet\n        </button>\n        {ethereumAccount && <p>Connected Ethereum: {ethereumAccount}</p>}\n      </div>\n\n      <div className=\"mb-4\">\n        <button onClick={connectSuiWallet} className=\"px-4 py-2 bg-green-500 text-white rounded shadow\">\n          Connect Sui Wallet\n        </button>\n        {suiAccount && <p>Connected Sui: {suiAccount}</p>}\n      </div>\n\n      {connected && (\n        <button onClick={handleDisconnectSui} className=\"px-4 py-2 bg-red-500 text-white rounded shadow\">\n          Disconnect Sui Wallet\n        </button>\n      )}\n\n      <div className=\"mb-4\">\n        <input\n          type=\"number\"\n          placeholder=\"Amount to Bridge\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          className=\"p-2 border rounded w-64\"\n        />\n      </div>\n\n      <button\n        onClick={bridgeToSui}\n        className=\"px-4 py-2 bg-purple-500 text-white rounded shadow\">\n        Bridge Tokens to Sui\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}