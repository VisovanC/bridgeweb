{"version":3,"sources":["../src/index.ts","../src/StandardWalletAdapter.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { WalletAdapterProvider } from '@mysten/wallet-adapter-base';\nimport {\n\tisStandardWalletAdapterCompatibleWallet,\n\tStandardWalletAdapterWallet,\n\tWallets,\n\tgetWallets,\n} from '@mysten/wallet-standard';\nimport { StandardWalletAdapter } from './StandardWalletAdapter';\nimport mitt, { Emitter } from 'mitt';\n\ntype Events = {\n\tchanged: void;\n};\n\nexport { StandardWalletAdapter };\n\n// These are the default features that the adapter will check for:\nexport const DEFAULT_FEATURES: (keyof StandardWalletAdapterWallet['features'])[] = [\n\t'sui:signAndExecuteTransactionBlock',\n];\n\nexport class WalletStandardAdapterProvider implements WalletAdapterProvider {\n\t#wallets: Wallets;\n\t#adapters: Map<StandardWalletAdapterWallet, StandardWalletAdapter>;\n\t#events: Emitter<Events>;\n\t#features: string[];\n\n\tconstructor({ features }: { features?: string[] } = {}) {\n\t\tthis.#adapters = new Map();\n\t\tthis.#wallets = getWallets();\n\t\tthis.#events = mitt();\n\t\tthis.#features = features ?? DEFAULT_FEATURES;\n\n\t\tthis.#wallets.on('register', () => {\n\t\t\tthis.#events.emit('changed');\n\t\t});\n\n\t\tthis.#wallets.on('unregister', () => {\n\t\t\tthis.#events.emit('changed');\n\t\t});\n\t}\n\n\tget() {\n\t\tconst filtered = this.#wallets\n\t\t\t.get()\n\t\t\t.filter((wallet) =>\n\t\t\t\tisStandardWalletAdapterCompatibleWallet(wallet, this.#features),\n\t\t\t) as StandardWalletAdapterWallet[];\n\n\t\tfiltered.forEach((wallet) => {\n\t\t\tif (!this.#adapters.has(wallet)) {\n\t\t\t\tthis.#adapters.set(wallet, new StandardWalletAdapter({ wallet }));\n\t\t\t}\n\t\t});\n\n\t\treturn [...this.#adapters.values()];\n\t}\n\n\ton<T extends keyof Events>(eventName: T, callback: (data: Events[T]) => void) {\n\t\tthis.#events.on(eventName, callback);\n\t\treturn () => {\n\t\t\tthis.#events.off(eventName, callback);\n\t\t};\n\t}\n}\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { WalletAdapter, WalletAdapterEvents } from '@mysten/wallet-adapter-base';\nimport {\n\tStandardWalletAdapterWallet,\n\tSuiSignAndExecuteTransactionBlockVersion,\n\tSuiSignTransactionBlockVersion,\n} from '@mysten/wallet-standard';\nimport mitt from 'mitt';\n\nexport interface StandardWalletAdapterConfig {\n\twallet: StandardWalletAdapterWallet;\n}\n\ntype WalletAdapterEventsMap = {\n\t[E in keyof WalletAdapterEvents]: Parameters<WalletAdapterEvents[E]>[0];\n};\n\nconst suiSignTransactionBlockLatestVersion: SuiSignTransactionBlockVersion = '1.0.0';\nconst suiSignAndExecuteTransactionBlockLatestVersion: SuiSignAndExecuteTransactionBlockVersion =\n\t'1.0.0';\n\nfunction isFeatureCompatible(featureVersion: string, adapterVersion: string) {\n\tconst [featureMajor] = featureVersion.split('.');\n\tconst [adapterMajor] = adapterVersion.split('.');\n\treturn Number(adapterMajor) === Number(featureMajor);\n}\n\nexport class StandardWalletAdapter implements WalletAdapter {\n\tconnected = false;\n\tconnecting = false;\n\n\treadonly #events = mitt<WalletAdapterEventsMap>();\n\t#wallet: StandardWalletAdapterWallet;\n\t#walletEventUnsubscribe: (() => void) | null = null;\n\n\tconstructor({ wallet }: StandardWalletAdapterConfig) {\n\t\tthis.#wallet = wallet;\n\t}\n\n\tget name() {\n\t\treturn this.#wallet.name;\n\t}\n\n\tget icon() {\n\t\treturn this.#wallet.icon;\n\t}\n\n\tget wallet() {\n\t\treturn this.#wallet;\n\t}\n\n\tasync getAccounts() {\n\t\treturn this.#wallet.accounts;\n\t}\n\n\tasync connect() {\n\t\ttry {\n\t\t\tif (this.connected || this.connecting) return;\n\t\t\tthis.connecting = true;\n\n\t\t\tthis.#walletEventUnsubscribe = this.#wallet.features['standard:events'].on(\n\t\t\t\t'change',\n\t\t\t\tasync ({ accounts }) => {\n\t\t\t\t\tif (accounts) {\n\t\t\t\t\t\tthis.connected = accounts.length > 0;\n\t\t\t\t\t\tawait this.#notifyChanged();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (!this.#wallet.accounts.length) {\n\t\t\t\tawait this.#wallet.features['standard:connect'].connect();\n\t\t\t}\n\n\t\t\tif (!this.#wallet.accounts.length) {\n\t\t\t\tthrow new Error('No wallet accounts found');\n\t\t\t}\n\n\t\t\tthis.connected = true;\n\t\t\tawait this.#notifyChanged();\n\t\t} finally {\n\t\t\tthis.connecting = false;\n\t\t}\n\t}\n\n\tasync disconnect() {\n\t\tif (this.#wallet.features['standard:disconnect']) {\n\t\t\tawait this.#wallet.features['standard:disconnect'].disconnect();\n\t\t}\n\t\tthis.connected = false;\n\t\tthis.connecting = false;\n\t\tif (this.#walletEventUnsubscribe) {\n\t\t\tthis.#walletEventUnsubscribe();\n\t\t\tthis.#walletEventUnsubscribe = null;\n\t\t}\n\t}\n\n\tsignMessage: WalletAdapter['signMessage'] = (messageInput) => {\n\t\tif (!this.#wallet.features['sui:signMessage']) {\n\t\t\tthrow new Error('Wallet does not support the deprecated `signMessage` method.');\n\t\t}\n\n\t\treturn this.#wallet.features['sui:signMessage'].signMessage(messageInput);\n\t};\n\n\tsignPersonalMessage: WalletAdapter['signPersonalMessage'] = (messageInput) => {\n\t\tif (!this.#wallet.features['sui:signPersonalMessage']) {\n\t\t\tthrow new Error('Wallet does not support the new `signPersonalMessage` method.');\n\t\t}\n\t\treturn this.#wallet.features['sui:signPersonalMessage'].signPersonalMessage(messageInput);\n\t};\n\n\tsignTransactionBlock: WalletAdapter['signTransactionBlock'] = (transactionInput) => {\n\t\tconst version = this.#wallet.features['sui:signTransactionBlock'].version;\n\t\tif (!isFeatureCompatible(version, suiSignTransactionBlockLatestVersion)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Version mismatch, signTransaction feature version ${version} is not compatible with version ${suiSignTransactionBlockLatestVersion}`,\n\t\t\t);\n\t\t}\n\t\treturn this.#wallet.features['sui:signTransactionBlock'].signTransactionBlock(transactionInput);\n\t};\n\n\tsignAndExecuteTransactionBlock: WalletAdapter['signAndExecuteTransactionBlock'] = (\n\t\ttransactionInput,\n\t) => {\n\t\tconst version = this.#wallet.features['sui:signAndExecuteTransactionBlock'].version;\n\t\tif (!isFeatureCompatible(version, suiSignAndExecuteTransactionBlockLatestVersion)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Version mismatch, signAndExecuteTransactionBlock feature version ${version} is not compatible with version ${suiSignAndExecuteTransactionBlockLatestVersion}`,\n\t\t\t);\n\t\t}\n\t\treturn this.#wallet.features[\n\t\t\t'sui:signAndExecuteTransactionBlock'\n\t\t].signAndExecuteTransactionBlock(transactionInput);\n\t};\n\n\ton: <E extends keyof WalletAdapterEvents>(\n\t\tevent: E,\n\t\tcallback: WalletAdapterEvents[E],\n\t) => () => void = (event, callback) => {\n\t\tthis.#events.on(event, callback);\n\t\treturn () => {\n\t\t\tthis.#events.off(event, callback);\n\t\t};\n\t};\n\n\tasync #notifyChanged() {\n\t\tthis.#events.emit('change', {\n\t\t\tconnected: this.connected,\n\t\t\taccounts: await this.getAccounts(),\n\t\t});\n\t}\n}\n"],"mappings":"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","names":["mitt","_events","mitt"]}